name: Release

on:
  # Run the workflow each time new commits are pushed to the candidate branch. 
  push:
    branches: [ "2204" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  issues: write

jobs:
  get-architectures:
    name: ðŸ–¥ Get snap architectures
    runs-on: ubuntu-latest
    outputs:
      architectures: ${{ steps.get-architectures.outputs.architectures }}
      architectures-list: ${{ steps.get-architectures.outputs.architectures-list }}
    steps:
      - name: ðŸ–¥ Get snap architectures
        id: get-architectures
        uses: snapcrafters/ci/get-architectures@main
        with:
          snapcraft-project-root: "ffmpeg-2204-sdk"

  release-sdk:
    name: ðŸš¢ Release to latest/candidate
    needs: get-architectures
    runs-on: ubuntu-latest
    environment: "2204 Branch"
    strategy:
      matrix:
        architecture: ${{ fromJSON(needs.get-architectures.outputs.architectures-list) }}
    steps:
      - name: ðŸš¢ Release to latest/edge
        uses: snapcrafters/ci/release-to-candidate@main
        with:
          architecture: ${{ matrix.architecture }}
          channel: "candidate-${{ github.event.number }}"
          launchpad-token: ${{ secrets.LP_BUILD_SECRET }}          
          snapcraft-project-root: "ffmpeg-2204-sdk"
          store-token: ${{ secrets.SNAP_STORE_CANDIDATE }}
            
  update-content-snap:
    name: Update the content snap
    needs: [ release-sdk, get-architectures ]
    environment: "2204 Branch"
    runs-on: ubuntu-latest
    steps:
      - name: Update the content snap
        uses: snapcrafters/ci/sync-version@main
        with:
          token: ${{ secrets.SNAPCRAFTERS_BOT_COMMIT }}
          snapcraft-project-root: "ffmpeg-2204"
          update-script: |
            sed -i 's/^\(- ffmpeg-2204-sdk\/latest\/\)stable$/\1candidate-${{ github.event.number }}/' ffmpeg-2204/snapcraft.yaml

  release-content:
    name: ðŸš¢ Release to latest/edge
    needs: get-architectures
    runs-on: ubuntu-latest
    environment: "2204 Branch"
    strategy:
      matrix:
        architecture: ${{ fromJSON(needs.get-architectures.outputs.architectures-list) }}
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SNAPCRAFTERS_BOT_COMMIT }}
      - name: ðŸš¢ Release to latest/edge
        uses: snapcrafters/ci/release-to-candidate@main
        with:
          architecture: ${{ matrix.architecture }}
          channel: "edge-${{ github.event.number }}"
          launchpad-token: ${{ secrets.LP_BUILD_SECRET }}          
          snapcraft-project-root: "ffmpeg-2204"
          store-token: ${{ secrets.SNAP_STORE_CANDIDATE }}

  call-for-testing:
    name: ðŸ“£ Create call for testing
    needs: [release-sdk, get-architectures]
    environment: "2204 Branch"
    runs-on: ubuntu-latest
    outputs:
      issue-number: ${{ steps.issue.outputs.issue-number }}
    steps:
      - name: ðŸ“£ Create call for testing
        id: issue
        uses: snapcrafters/ci/call-for-testing@main
        with:
          architectures: ${{ needs.get-architectures.outputs.architectures }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          snapcraft-project-root: "ffmpeg-2204-sdk"

  call-for-testing-content:
    name: ðŸ“£ Create call for testing
    needs: [release-content, get-architectures]
    environment: "2204 Branch"
    runs-on: ubuntu-latest
    outputs:
      issue-number: ${{ steps.issue.outputs.issue-number }}
    steps:
      - name: ðŸ“£ Create call for testing
        id: issue
        uses: snapcrafters/ci/call-for-testing@main
        with:
          architectures: ${{ needs.get-architectures.outputs.architectures }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          snapcraft-project-root: "ffmpeg-2204"

